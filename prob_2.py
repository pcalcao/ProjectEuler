'''

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

'''

import itertools

fibbo_cache = {1:1, 2:2}

def fibbo(n):
	if n in fibbo_cache:
		return fibbo_cache[n]
	#We'll take the naive approach to fibbonacci right here, I'll see about improving this later with Djikstra's help
	fibbo_cache[n] = fibbo_cache[n-1] + fibbo_cache[n-2]
	return fibbo_cache[n]

#now we'll use our pretty fibbonacci function to help us out
n = 1
result = 0
threshold = 4000000

for i in itertools.count(0):
	n = fibbo (i+1)
	if n >= threshold:
		break
	if n % 2 == 0:
		result += n
	
print result
	
